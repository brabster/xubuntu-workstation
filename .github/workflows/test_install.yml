name: test_install
on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * 0"
jobs:
  test_install:
    strategy:
      matrix:
        image:
          - ubuntu:latest
          - ubuntu:rolling
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
      env:
        DEBIAN_FRONTEND: noninteractive
    steps:
      - name: debug info
        run: |
          cat /etc/lsb-release
      - name: update and install pre-reqs
        # snapd depends on systemd and can't easily be run in a container
        # but snaps have never caused any problems so not concerned about lack of smoke testing
        run: |
          apt-get update
          apt-get -y install git ansible sudo bzip2
      - name: setup user
        run: |
          adduser --disabled-password --quiet --gecos '' tester
          su - tester -c id
          su - tester -c "mkdir -p /home/tester/Downloads"
      - name: checkout
        uses: actions/checkout@v4
      - name: setup
        run: |
          cd $GITHUB_WORKSPACE
          cp ${GITHUB_WORKSPACE}/.github/test_vars.yml ${GITHUB_WORKSPACE}/.vars.yml
          ansible-playbook -i inventory workstation.yml 
      - name: check
        shell: bash -l {0}
        run: |
          su - tester -c "alias"
          su - tester -c "git config --list"
          su - tester -c "python --version"
          su - tester -c "! pip install jsonschema # should not work because no venv"
          su - tester -c "clamscan --version"
          echo "Checking passwordless sudo for update script..."
          su - tester -c "sudo update"
          su - tester -c "! sudo ls /root"
          # su - tester -c "! systemctl is-enabled cups"
          # su - tester -c "sudo systemctl start cups"
          # su - tester -c "sudo systemctl stop cups"
          # su - tester -c "! sudo systemctl enable cups" ## should not work as only able to start and stop
      - name: Verify ClamAV On-Access Scanning
        run: |
          # --- DIAGNOSTICS ---
          echo "--- 1. Checking clamav-daemon service status ---"
          systemctl status clamav-daemon --no-pager || echo "systemctl status failed"

          echo "--- 2. Checking for AppArmor denials in syslog ---"
          sudo grep DENIED /var/log/syslog || echo "No AppArmor DENIED messages found in syslog."

          echo "--- 3. Waiting for ClamAV engine to initialize ---"
          # Give the daemon time to load the virus signature database, which can be slow.
          sleep 20

          echo "--- 4. Checking status again after delay ---"
          systemctl status clamav-daemon --no-pager || echo "systemctl status failed"

          echo "--- 5. Running verification script ---"
          chmod +x .github/verify_clamav.sh
          .github/verify_clamav.sh
