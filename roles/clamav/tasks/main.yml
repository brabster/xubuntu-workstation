---
- name: Install clamav
  ansible.builtin.package:
    name:
      - clamav
      - clamav-daemon
    state: present

- name: Note ClamAV version and sig versions when running updates
  ansible.builtin.lineinfile:
    path: '{{ update_script }}'
    line: freshclam && clamscan --version

- name: Configure clamav daemon
  ansible.builtin.template:
    src: clamd.conf.j2
    dest: /etc/clamav/clamd.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart clamav-daemon

- name: Update virus definitions before first start
  ansible.builtin.command:
    cmd: freshclam
  changed_when: false

- name: Copy quarantine script
  ansible.builtin.copy:
    src: clamav-quarantine.sh
    dest: /usr/local/bin/clamav-quarantine.sh
    owner: root
    group: root
    mode: '0755'

- name: Add clamav user to the tester group
  ansible.builtin.user:
    name: clamav
    groups: tester
    append: true
  when: lookup('env', 'CI') == 'true'

- name: Ensure clamav-daemon is running and enabled
  ansible.builtin.service:
    name: clamav-daemon
    state: started
    enabled: true
  when: lookup('env', 'CI') != 'true'

- name: Create clamav runtime directory for PID file (for CI)
  ansible.builtin.file:
    path: /run/clamav
    state: directory
    owner: clamav
    group: clamav
    mode: '0755'
  when: lookup('env', 'CI') == 'true'

- name: Start clamav-daemon process manually (in CI environment)
  ansible.builtin.command:
    cmd: /etc/init.d/clamav-daemon start
  when: lookup('env', 'CI') == 'true'
  changed_when: false

- name: Wait for the clamd socket to become available (for CI)
  ansible.builtin.wait_for:
    path: /run/clamav/clamd.ctl
    timeout: 10
  when: lookup('env', 'CI') == 'true'

- name: Start the clamonacc file-watching process (for CI)
  ansible.builtin.command:
    # Start it in the background
    cmd: clamonacc &
  when: lookup('env', 'CI') == 'true'
  changed_when: false

# - name: Run clamd in debug mode to see startup errors (for CI)
#   ansible.builtin.command:
#     cmd: /usr/sbin/clamd --debug --foreground
#   when: lookup('env', 'CI') == 'true'
#   changed_when: false